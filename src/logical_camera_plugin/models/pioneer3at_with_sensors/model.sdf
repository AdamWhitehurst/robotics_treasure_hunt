<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="pioneer3at_with_sensors">
    <pose>0 0 0.180 0 0 0</pose>
    <static>false</static>
    <link name="base_link">
      <inertial>
        <mass>14.0</mass>
        <inertia>
          <!-- http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
          MATLAB:
          m=14; h=0.19; w=0.4; d=0.5; 
          ixx = 1/12*m*(h^2+d^2)
          iyy = 1/12*m*(w^2+d^2) 
          izz = 1/12*m*(h^2+d^2) 
          -->
          <ixx>0.147116667</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.334951167</iyy>
          <iyz>0.0</iyz>
          <izz>0.3978345</izz>
        </inertia>
      </inertial>
      <collision name="collision1">
        <geometry>
          <box>
            <size>0.501 0.300 0.19</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual1">
        <geometry>
          <mesh>
            <uri>model://pioneer3at_with_sensors/meshes/chassis.dae</uri>
          </mesh>
        </geometry>
      </visual>

       <sensor name='sensorCollision' type='contact'>
       	<plugin name="collision_plugin" filename="libcollision_plugin.so"/>
          <contact>
            <collision>collision1</collision>
          </contact>
        </sensor>


<!-- IMU Sensor -->
      <sensor name="imu_sensor" type="imu">
        <pose>0 0 0 0 0 0</pose>
        <always_on>1</always_on>
        <update_rate>100</update_rate>
<!--  NOW update rate is set 10 tempolarity -->
        <update_rate>10</update_rate>

        <imu>
<!--  NOW comment noise parameters out tempolary -->
          <noise>
            <type>gaussian</type>
            <rate>
              <mean>0</mean>
              <stddev>0.0002</stddev>
              <bias_mean>7.5e-06</bias_mean>
              <bias_stddev>8e-07</bias_stddev>
            </rate>
            <accel>
              <mean>0</mean>
              <stddev>0.017</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </accel>
          </noise>

        </imu>
      </sensor>
<!-- GPS sensor copied from gazebo-5.0.1/test/worlds/gps_test.world -->
      <sensor name="gps" type="gps">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>10.0</update_rate>
        <always_on>true</always_on>
        <gps>
          <position_sensing>
            <horizontal>
              <noise type="gaussian_quantized">
                <mean>0</mean>
                <stddev>1</stddev>
                <bias_mean>3</bias_mean>
                <bias_stddev>1</bias_stddev>
                <precision>0.5</precision>
              </noise>
            </horizontal>
            <vertical>
              <noise type="gaussian_quantized">
                <mean>0</mean>
                <stddev>1</stddev>
                <bias_mean>3</bias_mean>
                <bias_stddev>1</bias_stddev>
                <precision>1.0</precision>
              </noise>
            </vertical>
          </position_sensing>
          <velocity_sensing>
            <horizontal>
              <noise type="gaussian_quantized">
                <mean>0</mean>
                <stddev>0.1</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.1</bias_stddev>
                <precision>0.1</precision>
              </noise>
            </horizontal>
            <vertical>
              <noise type="gaussian_quantized">
                <mean>0</mean>
                <stddev>0.2</stddev>
                <bias_mean>0.2</bias_mean>
                <bias_stddev>0.2</bias_stddev>
                <precision>0.2</precision>
              </noise>
            </vertical>
          </velocity_sensing>
        </gps>
      </sensor>
    </link>
<!-- Camera (hight is 100mm) 
    <include>
      <name>camera</name>
      <pose>0.1 0 0.22 0 0 0</pose>
      <uri>model://camera_rc2016</uri>
    </include>
    <joint name="camera_joint" type="revolute">
      <parent>chassis</parent>
      <child>camera::link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0.000000 0.000000 1.000000</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
        </limit>
      </axis>
    </joint>
-->

<!-- Hokuyo (hight is 70mm) -->
    <include>
      <name>hokuyoV2</name>
      <pose>0.1 0 0.135 0 0 0</pose>
      <uri>model://hokuyoV2</uri>
    </include>
    <joint name="hokuyo_joint" type="revolute">
      <parent>base_link</parent>
      <child>hokuyoV2::link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0.000000 0.000000 1.000000</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
        </limit>
      </axis>
    </joint>


<!-- logical camera -->

    
    <link name="logical_camera_link">
      <pose>0.2 0 0.2 0 0 0</pose>
      <sensor name="logical_camera" type="logical_camera">
          <logical_camera>
            <near>0.2</near>
            <far>1.0</far>
            <horizontal_fov>0.5</horizontal_fov>
            <aspect_ratio>1.2</aspect_ratio>
          </logical_camera>

          <visualize>true</visualize>
          <always_on>true</always_on>
          <update_rate>10</update_rate>
      </sensor>
    </link>

    <joint name="logical_camera_joint" type="fixed">
      <child>logical_camera_link</child>
      <parent>base_link</parent>
    </joint>



    <link name="right_front_wheel">
      <pose>0.125 -0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <slip1>0.5</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://pioneer3at_with_sensors/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>

		<sensor name='sensorCollision_rf_wheel' type='contact'>
       	<plugin name="collision_plugin" filename="libcollision_plugin.so"/>
          <contact>
            <collision>collision</collision>
          </contact>
        </sensor>

    </link>
    <link name="left_front_wheel">
      <pose>0.125 0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <slip1>0.5</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://pioneer3at_with_sensors/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <sensor name='sensorCollision_lf_wheel' type='contact'>
       	<plugin name="collision_plugin" filename="libcollision_plugin.so"/>
          <contact>
            <collision>collision</collision>
          </contact>
        </sensor>
    </link>
    <link name="right_rear_wheel">
      <pose>-0.125 -0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <slip1>0.5</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://pioneer3at_with_sensors/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <sensor name='sensorCollision_rr_wheel' type='contact'>
       	<plugin name="collision_plugin" filename="libcollision_plugin.so"/>
          <contact>
            <collision>collision</collision>
          </contact>
        </sensor>
    </link>
    <link name="left_rear_wheel">
      <pose>-0.125 0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <slip1>0.5</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://pioneer3at_with_sensors/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <sensor name='sensorCollision_lr_wheel' type='contact'>
       	<plugin name="collision_plugin" filename="libcollision_plugin.so"/>
          <contact>
            <collision>collision</collision>
          </contact>
        </sensor>
    </link>
    <joint type="revolute" name="right_front">
      <pose>0 0 0 0 0 0</pose>
      <child>right_front_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>
    <joint type="revolute" name="right_rear">
      <pose>0 0 0 0 0 0</pose>
      <child>right_rear_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>
    <joint type="revolute" name="left_front">
      <pose>0 0 0 0 0 0</pose>
      <child>left_front_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>
    <joint type="revolute" name="left_rear">
      <pose>0 0 0 0 0 0</pose>
      <child>left_rear_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>


        <plugin filename="libgazebo_ros_skid_steer_drive.so" name="skid_steer_drive_controller">
         
      <updateRate>20.0</updateRate>
      <leftFrontJoint>left_front</leftFrontJoint>
      <rightFrontJoint>right_front</rightFrontJoint>
      <leftRearJoint>left_rear</leftRearJoint>
      <rightRearJoint>right_rear</rightRearJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.215</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <MaxForce>5.0</MaxForce>
      <torque>200</torque>
      <commandTopic>cmd_vel</commandTopic> 
      <!--<commandTopic>noisy_cmd_vel</commandTopic>  used for calculating transition probabilities -->
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <broadcastTF>1</broadcastTF>
      <covariance_x>0.000100</covariance_x>
      <covariance_y>0.000100</covariance_y>
      <covariance_z>0.000100</covariance_z>
      <covariance_yaw>0.010000</covariance_yaw>
      
    </plugin>

   <!-- --> <plugin name="logical_camera" filename="liblogical_camera_plugin.so"/> 


    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
     
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>


  </model>
</sdf>
